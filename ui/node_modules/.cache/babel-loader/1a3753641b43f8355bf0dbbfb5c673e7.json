{"ast":null,"code":"import axios from 'axios';\nconst LOAD_PRODUCTS_REQUEST = 'app/products/LOAD_PRODUCTS_REQUEST';\nconst LOAD_PRODUCTS_SUCCESS = 'app/products/LOAD_PRODUCTS_SUCCESS';\nconst LOAD_PRODUCTS_FAILURE = 'app/products/LOAD_PRODUCTS_FAILURE';\nconst LOAD_PRODUCT_REQUEST = 'app/products/LOAD_PRODUCT_REQUEST';\nconst LOAD_PRODUCT_SUCCESS = 'app/products/LOAD_PRODUCT_SUCCESS';\nconst LOAD_PRODUCT_FAILURE = 'app/products/LOAD_PRODUCT_FAILURE';\nconst CLEAR_PRODUCTS = 'app/products/CLEAR_PRODUCTS';\n\nfunction loadProducts(query) {\n  return async dispatch => {\n    dispatch({\n      type: LOAD_PRODUCTS_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`/products${query}`);\n      dispatch({\n        type: LOAD_PRODUCTS_SUCCESS,\n        payload: {\n          products: data\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_PRODUCTS_FAILURE\n      });\n    }\n  };\n}\n\nfunction loadProduct(id) {\n  return async dispatch => {\n    dispatch({\n      type: LOAD_PRODUCT_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`/products/${id}`);\n      dispatch({\n        type: LOAD_PRODUCT_SUCCESS,\n        payload: {\n          product: data\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_PRODUCT_FAILURE\n      });\n    }\n  };\n}\n\nfunction clearProducts() {\n  return {\n    type: CLEAR_PRODUCTS\n  };\n}\n\nexport { LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, LOAD_PRODUCT_REQUEST, LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAILURE, CLEAR_PRODUCTS, loadProducts, loadProduct, clearProducts };","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Downloads/react-fundamentals/ui/src/modules/products/actions.js"],"names":["axios","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","LOAD_PRODUCT_REQUEST","LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAILURE","CLEAR_PRODUCTS","loadProducts","query","dispatch","type","data","get","payload","products","err","loadProduct","id","product","clearProducts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,qBAAqB,GAAG,oCAA9B;AACA,MAAMC,qBAAqB,GAAG,oCAA9B;AACA,MAAMC,qBAAqB,GAAG,oCAA9B;AACA,MAAMC,oBAAoB,GAAG,mCAA7B;AACA,MAAMC,oBAAoB,GAAG,mCAA7B;AACA,MAAMC,oBAAoB,GAAG,mCAA7B;AACA,MAAMC,cAAc,GAAG,6BAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;;AAEA,QAAI;AACF,YAAM;AAAEW,QAAAA;AAAF,UAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,YAAWJ,KAAM,EAA5B,CAAvB;AAEAC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,qBADC;AAEPY,QAAAA,OAAO,EAAE;AACPC,UAAAA,QAAQ,EAAEH;AADH;AAFF,OAAD,CAAR;AAMD,KATD,CASE,OAAOI,GAAP,EAAY;AACZN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER;AAAR,OAAD,CAAR;AACD;AACF,GAfD;AAgBD;;AAED,SAASc,WAAT,CAAqBC,EAArB,EAAyB;AACvB,SAAO,MAAOR,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;;AAEA,QAAI;AACF,YAAM;AAAEQ,QAAAA;AAAF,UAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,aAAYK,EAAG,EAA1B,CAAvB;AAEAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,oBAAR;AAA8BS,QAAAA,OAAO,EAAE;AAAEK,UAAAA,OAAO,EAAEP;AAAX;AAAvC,OAAD,CAAR;AACD,KAJD,CAIE,OAAOI,GAAP,EAAY;AACZN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAD,CAAR;AACD;AACF,GAVD;AAWD;;AAED,SAASc,aAAT,GAAyB;AACvB,SAAO;AACLT,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;;AAED,SACEN,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,cAPF,EAQEC,YARF,EASES,WATF,EAUEG,aAVF","sourcesContent":["import axios from 'axios'\n\nconst LOAD_PRODUCTS_REQUEST = 'app/products/LOAD_PRODUCTS_REQUEST'\nconst LOAD_PRODUCTS_SUCCESS = 'app/products/LOAD_PRODUCTS_SUCCESS'\nconst LOAD_PRODUCTS_FAILURE = 'app/products/LOAD_PRODUCTS_FAILURE'\nconst LOAD_PRODUCT_REQUEST = 'app/products/LOAD_PRODUCT_REQUEST'\nconst LOAD_PRODUCT_SUCCESS = 'app/products/LOAD_PRODUCT_SUCCESS'\nconst LOAD_PRODUCT_FAILURE = 'app/products/LOAD_PRODUCT_FAILURE'\nconst CLEAR_PRODUCTS = 'app/products/CLEAR_PRODUCTS'\n\nfunction loadProducts(query) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_PRODUCTS_REQUEST })\n\n    try {\n      const { data } = await axios.get(`/products${query}`)\n\n      dispatch({\n        type: LOAD_PRODUCTS_SUCCESS,\n        payload: {\n          products: data,\n        },\n      })\n    } catch (err) {\n      dispatch({ type: LOAD_PRODUCTS_FAILURE })\n    }\n  }\n}\n\nfunction loadProduct(id) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_PRODUCT_REQUEST })\n\n    try {\n      const { data } = await axios.get(`/products/${id}`)\n\n      dispatch({ type: LOAD_PRODUCT_SUCCESS, payload: { product: data } })\n    } catch (err) {\n      dispatch({ type: LOAD_PRODUCT_FAILURE })\n    }\n  }\n}\n\nfunction clearProducts() {\n  return {\n    type: CLEAR_PRODUCTS,\n  }\n}\n\nexport {\n  LOAD_PRODUCTS_REQUEST,\n  LOAD_PRODUCTS_SUCCESS,\n  LOAD_PRODUCTS_FAILURE,\n  LOAD_PRODUCT_REQUEST,\n  LOAD_PRODUCT_SUCCESS,\n  LOAD_PRODUCT_FAILURE,\n  CLEAR_PRODUCTS,\n  loadProducts,\n  loadProduct,\n  clearProducts,\n}\n"]},"metadata":{},"sourceType":"module"}